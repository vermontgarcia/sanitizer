{"version":3,"sources":["Components/Home/Home.js","404.js","Components/Auth/Login.js","authService.js","Components/Auth/Register.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","es_button","type","Component","NotFound","FormItem","window","location","hostname","es_form","Item","LoginForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","this","fieldsError","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","passwordError","className","src","alt","onSubmit","validateStatus","help","rules","required","message","input","prefix","icon","style","color","placeholder","valuePropName","initialValue","es_checkbox","Link","to","htmlType","disabled","Object","keys","some","field","Login","create","name","SignupForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleConfirmBlur","value","target","setState","confirmDirty","state","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","validateCheckedAgreement","autoCompleteResult","nameError","emailError","confirmPasswordError","agreementError","Register_FormItem","whitespace","validator","Signup","Router","Switch","Route","exact","path","render","Components_Home_Home","Auth_Login","Register","component","App","src_Router","withRouter","Boolean","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9bbd278.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Button} from 'antd';\n\nclass Home extends Component {\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Home</h1>\n\t\t\t\t<Button type='primary'>Clik on me!</Button>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Home;","import React from 'react';\n\nconst NotFound = () => (\n\t<h1>Not found</h1>\n);\n\nexport default NotFound;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {login} from '../../authService';\n\nimport {\n\tForm,\n\tIcon,\n\tInput,\n\tButton,\n\tCheckbox,\n} from 'antd';\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass LoginForm extends Component {\n\n\tcomponentDidMount(){\n\t\tthis.props.form.validateFields();\n\t}\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.form.validateFields((err, values) => {\n\t\t\tif (!err) {\n\t\t\t\tconsole.log('Received values of form: ', values);\n\t\t\t\t//login(values, this.props.history);\n\t\t\t}\n\t\t});\n\t}\n\n\trender(){\n\t\tconst {\n\t\t\tgetFieldDecorator,\n\t\t\tgetFieldsError,\n\t\t\tgetFieldError,\n\t\t\tisFieldTouched\n\t\t} = this.props.form;\n\n\t\tconst userNameError = isFieldTouched('userName') && getFieldError('userName');\n\t\tconst passwordError = isFieldTouched('password') && getFieldError('password');\n\n\n\t\treturn (\n\t\t\t<div className='login-envelop'>\n\t\t\t\t<div>\n\t\t\t\t\t<img src='logo.png' alt='PROSA logo' />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Form onSubmit={this.handleSubmit} className='form-envelop'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Login</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<FormItem\n\t\t\t\t\t\t\tvalidateStatus={userNameError ? 'error' : ''}\n\t\t\t\t\t\t\thelp={userNameError || ''}\n\t\t\t\t\t\t>\n              {getFieldDecorator('userName', {\n                rules: [{ required: true, message: 'Type your username!' }],\n              })(\n                <Input\n                  prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder='Username'/>\n              )}\n            </FormItem>\n\t\t\t\t\t\t<FormItem\n\t\t\t\t\t\t\tvalidateStatus={passwordError ? 'error' : ''}\n\t\t\t\t\t\t\thelp={passwordError || ''}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{getFieldDecorator('password', {\n\t\t\t\t\t\t\t\trules: [{ required: true, message: 'Type your password!'}],\n\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tprefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)'}} />}\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tplaceholder='Password' />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FormItem>\n\n            <FormItem>\n              {getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n              })(\n                <Checkbox>Remember me.</Checkbox>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<Link className='login-form-forgot' to='/forgot'>Forgot password.</Link>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype='primary'\n\t\t\t\t\t\t\t\thtmlType='submit'\n\t\t\t\t\t\t\t\tclassName='login-form-button'\n\t\t\t\t\t\t\t\tdisabled={hasErrors(getFieldsError())}>\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\tOr <Link to='/signup'>register now!</Link>\n            </FormItem>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst Login = Form.create({name: 'login-form'})(LoginForm)\n\nexport default Login;","import axios from 'axios';\nimport {message} from 'antd';\n\nconst base_url = window.location.hostname === 'localhost' ? 'http://localhost:3500/api' : 'https://sanitizer.herokuapp.com/api';\n\nexport const signup = (user, history) => {\n\taxios.post(`${base_url}/auth/signup`, user)\n\t\t.then(res => {\n\t\t\tlocalStorage.setItem('token', res.data.token);\n\t\t\tlocalStorage.setItem('user', JSON.stringify(res.data.user));\n\t\t\tmessage.success(res.data.msg);\n\t\t\thistory.push('/')\n\t\t})\n\t\t.catch(err => {\n\t\t\tmessage.error(err.response.data.msg);\n\t\t})\n}\n\nexport const login = (user, history) => {\n\taxios.post(`${base_url}/auth/login`, user)\n\t\t.then(res => {\n\t\t\tlocalStorage.setItem('token', res.data.token);\n\t\t\tmessage.success(res.data.msg);\n\t\t\thistory.push('/');\n\t\t})\n\t\t.catch(err => {\n\t\t\terr.response === undefined ? message.error('Network error!') : message.error(err.response.data.msg);\n\t\t});\n}\n\nexport const logout = (history) => {\n\tlocalStorage.removeItem('token');\n\tmessage.success('Logged out');\n\thistory.push('/login');\n}\n\nexport const isLoggedIn = (history) => {\n\tconst token = localStorage.getItem('token');\n\taxios.get(`${base_url}/auth/loggedin`, {\n\t\theaders: {\n\t\t\t'x-access-token':token\n\t\t}\n\t})\n\t.then(res => {\n\n\t})\n\t.catch(err => {\n\t\tmessage.error(err.response.data.msg);\n\t\tlocalStorage.removeItem('token');\n\t\thistory.push('/login');\n\t});\n}","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {signup} from '../../authService';\n\nimport {\n\tForm,\n\tIcon,\n\tInput,\n\tButton,\n\tCheckbox,\n} from 'antd';\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass SignupForm extends Component {\n\t\n\tconstructor (){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tconfirmDirty: false,\n\t\t\tautoCompleteResult: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n    this.props.form.validateFields();\n  }\n\t\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.form.validateFields((err, values) => {\n\t\t\tif (!err) {\n\t\t\t\tconsole.log('Received values of form: ', values);\n\t\t\t\t//signup(values, this.props.history);\n\t\t\t}\n\t\t});\n\t}\n\n\thandleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('¡La contraseña no coincide!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n\t}\n\t\n\tvalidateCheckedAgreement = (rule, value, callback) => {\n\t\t//const form = this.props.form;\n\t\tif(value === false){\n\t\t\tcallback('Please confirm the agreement!');\n\t\t}\n\t\tcallback();\n\t}\n\n\trender(){\n\t\tconst {\n\t\t\tgetFieldDecorator,\n\t\t\tgetFieldsError,\n\t\t\tgetFieldError,\n\t\t\tisFieldTouched\n\t\t} = this.props.form;\n\n\t\tconst nameError = isFieldTouched('name') && getFieldError('name');\n\t\tconst emailError = isFieldTouched('email') && getFieldError('email');\n\t\tconst passwordError = isFieldTouched('password') && getFieldError('password');\n\t\tconst confirmPasswordError = isFieldTouched('confirm') && getFieldError('confirm');\n\t\tconst agreementError = isFieldTouched('agreement') && getFieldError('agreement');\n\t\t\n\t\treturn (\n\t\t\t<div className='signup-envelop'>\n\t\t\t\t<div>\n\t\t\t\t\t<img className='prosa-logo' src='logo.png' alt='PROSA logo' />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Form onSubmit={this.handleSubmit} className='form-envelop'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Register</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FormItem\n\t\t\t\t\t\t\tvalidateStatus={nameError ? 'error' : ''}\n\t\t\t\t\t\t\thelp={nameError || ''}\n\t\t\t\t\t\t>\n              {getFieldDecorator('name', {\n                rules: [{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage: 'Please enter your name',\n\t\t\t\t\t\t\t\t\twhitespace: true }],\n              })(\n                <Input\n                  prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder='What is your name?'/>\n              )}\n            </FormItem>\n            <FormItem\n\t\t\t\t\t\t\tvalidateStatus={emailError ? 'error' : ''}\n\t\t\t\t\t\t\thelp={emailError || ''}\n\t\t\t\t\t\t>\n              {getFieldDecorator('email', {\n                rules: [{\n\t\t\t\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\t\t\t\tmessage: 'Please enter a valid email!',\n                },{\n                  required: true, message: 'Please enter your email!',\n                }],\n              })(\n                <Input\n                  prefix={<Icon type='mail' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder='user.name@prosa.com.mx'/>\n              )}\n            </FormItem>\n            <FormItem\n\t\t\t\t\t\t\tvalidateStatus={passwordError ? 'error' : ''}\n\t\t\t\t\t\t\thelp={passwordError || ''}\n\t\t\t\t\t\t>\n              {getFieldDecorator('password', {\n                rules: [{\n                  required: true, message: 'Please enter your password',\n                },{\n                  validator: this.validateToNextPassword,\n                }],\n              })(\n                <Input\n                  prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  type='password'\n                  placeholder='Password'/>\n              )}\n            </FormItem>\n            <FormItem\n\t\t\t\t\t\t\tvalidateStatus={confirmPasswordError ? 'error' : ''}\n\t\t\t\t\t\t\thelp={confirmPasswordError || ''}\n\t\t\t\t\t\t>\n              {getFieldDecorator('confirm', {\n                rules: [{\n                  required: true, message: 'Please, confirm your password!',\n                },{\n                  validator: this.compareToFirstPassword,\n                }],\n              })(\n                <Input\n                  prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  type='password'\n                  placeholder='Confirm your password'/>\n              )}\n            </FormItem>\n            <FormItem\n\t\t\t\t\t\t\tvalidateStatus={agreementError ? 'error' : ''}\n\t\t\t\t\t\t\thelp={agreementError || ''}\n\t\t\t\t\t\t>\n              {getFieldDecorator('agreement', {\n\t\t\t\t\t\t\t\trules: [{\n\t\t\t\t\t\t\t\t\trequired: true, message: 'Please confirm agreement!'\n\t\t\t\t\t\t\t\t},{\n\t\t\t\t\t\t\t\t\tvalidator: this.validateCheckedAgreement,\n\t\t\t\t\t\t\t\t}],\n                valuePropName: 'checked',\n              })(\n                <Checkbox>I have read and accept the <Link to='/agreement'>agreement.</Link></Checkbox>\n                )}\n            </FormItem>\n\t\t\t\t\t\t<FormItem>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype='primary' \n\t\t\t\t\t\t\t\thtmlType='submit'\n\t\t\t\t\t\t\t\tclassName='login-form-button'\n\t\t\t\t\t\t\t\tdisabled={hasErrors(getFieldsError())}>\n\t\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\tAlready have an account? <Link to='/login' >Login</Link>\n\t\t\t\t\t\t</FormItem>\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst Signup = Form.create({name: 'signup-form'})(SignupForm);\n\nexport default Signup;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\nimport Home from './Components/Home/Home';\nimport NotFound from './404';\nimport Login from './Components/Auth/Login';\nimport Signup from './Components/Auth/Register';\n\nconst Router = () => (\n\t<Switch>\n\t\t<Route exact path='/' render={() => (\n\t\t\t<Home\n\t\t\t/>\n\t\t)}\n\t\t/>\n\t\t<Route exact path='/login' render={() => (\n\t\t\t<Login\n\t\t\t/>\n\t\t)}\n\t\t/>\n\t\t<Route exact path='/signup' render={() => (\n\t\t\t<Signup\n\t\t\t/>\n\t\t)}\n\t\t/>\n\t\t<Route path='*' component={NotFound} />\n\t</Switch>\n)\n\nexport default Router;","import React, {Component} from 'react';\nimport Router from './Router';\n\nimport {withRouter} from 'react-router-dom';\n\n//import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\t\t\t\t<Router />        \n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nconst WithRouter = () => (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}